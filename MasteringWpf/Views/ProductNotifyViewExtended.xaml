<UserControl x:Class="MasteringWpf.Views.ProductNotifyViewExtended"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MasteringWpf.Views"
             xmlns:converters="clr-namespace:MasteringWpf.Converters"
             xmlns:views="clr-namespace:MasteringWpf.Views"
             xmlns:dataModels="clr-namespace:MasteringWpf.DataModels"
mc:Ignorable="d" d:DesignHeight="300" Width="600" FontSize="14">
    <Grid Margin="20">
        <Grid.Resources>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,10,10" />
                <Setter Property="Foreground" Value="White" />
            </Style>
            <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0,0,0,10" />
                <Setter Property="Padding" Value="1.5,2" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
            </Style>
            <RadialGradientBrush x:Key="BlueGlow" Center="0.5,0.848" GradientOrigin="0.5,0.818" RadiusX="-1.424" RadiusY="-0.622" RelativeTransform="{StaticResource GlowTransformGroup}">
                <GradientStop Color="#CF01C7FF" Offset="0.168" />
                <GradientStop Color="#4B01C7FF" Offset="0.478" />
                <GradientStop Color="#1101C7FF" Offset="1" />
            </RadialGradientBrush>
            <RadialGradientBrush x:Key="RedGlow" Center="0.5,0.848" GradientOrigin="0.5,0.818" RadiusX="-1.424" RadiusY="-0.622" RelativeTransform="{StaticResource GlowTransformGroup}">
                <GradientStop Color="#CFFF0000" Offset="0.168" />
                <GradientStop Color="#4BFF0000" Offset="0.478" />
                <GradientStop Color="#00FF0000" Offset="1" />
            </RadialGradientBrush>
            <ControlTemplate x:Key="ErrorTemplate">
                <Border BorderBrush="Red" BorderThickness="2" Background="#1FFF0000" SnapsToDevicePixels="True">
                    <AdornedElementPlaceholder />
                </Border>
            </ControlTemplate>
            <ToolTip x:Key="ValidationErrorsToolTip">
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding ErrorContent }" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ToolTip>
            <ControlTemplate x:Key="WarningErrorTemplate">
                <StackPanel Orientation="Horizontal" ToolTip="{StaticResource ValidationErrorsToolTip}">
                    <AdornedElementPlaceholder Margin="0,0,2,0" ToolTip="{StaticResource ValidationErrorsToolTip}" />
                    <Image Source="pack://application:,,,/CompanyName.ApplicationName;component/Images/Warning_16.png" Stretch="None" />
                </StackPanel>
            </ControlTemplate>
            <DataTemplate x:Key="WrapTemplate">
                <TextBlock Text="{Binding}" TextWrapping="Wrap" />
            </DataTemplate>
            <Style x:Key="ErrorBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="BorderBrush" Value="#7BFF0000" />
                <Setter Property="Background" Value="#FFFFDFE1" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="CornerRadius" Value="2.75" />
                <Setter Property="Padding" Value="5,3" />
                <Setter Property="Margin" Value="0,0,0,5" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Visibility" Value="{Binding Products.CurrentItem.HasErrors, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed, Mode=OneWay}" />
            </Style>
            <Style x:Key="GlowStyle" TargetType="{x:Type Rectangle}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Opacity" Value="1.0" />
                <Setter Property="StrokeThickness" Value="0" />
                <Setter Property="RadiusX" Value="2.5" />
                <Setter Property="RadiusX" Value="2.5" />
                <Setter Property="IsHitTestVisible" Value="False" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Fill" Value="{StaticResource BlueGlow}" />
            </Style>
            <Style x:Key="ProductGlowStyle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource GlowStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Products.CurrentItem.HasChanges, FallbackValue=False, Mode=OneWay}" Value="True">
                        <Setter Property="Rectangle.Fill" Value="{StaticResource GreenGlow}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Products.CurrentItem.HasErrors, FallbackValue=False, Mode=OneWay}" Value="True">
                        <Setter Property="Rectangle.Fill" Value="{StaticResource RedGlow}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ProductItemGlowStyle" TargetType="{x:Type Rectangle}" BasedOn="{StaticResource GlowStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding HasChanges, FallbackValue=False, Mode=OneWay}" Value="True">
                        <Setter Property="Rectangle.Fill" Value="{StaticResource GreenGlow}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding HasErrors, FallbackValue=False, Mode=OneWay}" Value="True">
                        <Setter Property="Rectangle.Fill" Value="{StaticResource RedGlow}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="2,2,2,0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <DataTemplate DataType="{x:Type dataModels:ProductNotifyExtended}">
                <Border CornerRadius="3" BorderBrush="{StaticResource TransparentBlack}" BorderThickness="1" Background="{StaticResource TransparentWhite}">
                    <Border Name="InnerBorder" CornerRadius="2" Margin="1" Background="{StaticResource LayeredButtonBackground}">
                        <Grid>
                            <Rectangle IsHitTestVisible="False" RadiusX="2" RadiusY="2" Style="{StaticResource ProductItemGlowStyle}" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Image Width="24" Height="24" Source="pack://application:,,,/CompanyName.ApplicationName;component/Images/Product.ico" VerticalAlignment="Center" Margin="3,2,5,2" />
                                <TextBlock Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap" Margin="0,1,5,3" Foreground="White" FontSize="14" />
                                <Button Grid.Column="2" Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ProductNotifyViewExtended}}}" CommandParameter="{Binding}" Margin="0,2,4,2" Width="20" Height="20">
                                    <Image Width="16" Height="16" Source="pack://application:,,,/CompanyName.ApplicationName;component/Images/Delete_16.png" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
            </DataTemplate>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <ListBox ItemsSource="{Binding Products}" SelectedItem="{Binding Products.CurrentItem}" Margin="0,0,20,0" HorizontalContentAlignment="Stretch" />
        <Border Grid.Column="1" CornerRadius="3" BorderBrush="{StaticResource TransparentBlack}" BorderThickness="1" Background="{StaticResource TransparentWhite}">
            <Border Name="InnerBorder" CornerRadius="2" Margin="1" Background="{StaticResource LayeredButtonBackground}">
                <Grid>
                    <Rectangle IsHitTestVisible="False" RadiusX="2" RadiusY="2" Style="{StaticResource ProductGlowStyle}" />
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" Style="{StaticResource ErrorBorderStyle}" Margin="0,0,0,10" Padding="10">
                            <ItemsControl ItemsSource="{Binding Products.CurrentItem.Errors}" ItemTemplate="{StaticResource WrapTemplate}" />
                        </Border>
                        <TextBlock Grid.Row="1" Text="Name" Style="{StaticResource LabelStyle}" />
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Products.CurrentItem.Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />
                        <TextBlock Grid.Row="2" Text="Price" Style="{StaticResource LabelStyle}" />
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Products.CurrentItem.Price, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}" />
                        <!--<TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Products.CurrentItem.Price, UpdateSourceTrigger=PropertyChanged, Delay=250}" Style="{StaticResource TextBoxStyle}" Attached:TextBoxProperties.IsNumericOnly="True" />-->
                    </Grid>
                </Grid>
            </Border>
        </Border>
    </Grid>
</UserControl>
